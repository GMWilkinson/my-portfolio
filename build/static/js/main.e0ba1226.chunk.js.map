{"version":3,"sources":["components/layout/Header.js","components/intro/TechLists.js","components/intro/MethLists.js","components/intro/TestLists.js","components/intro/FrameworksLists.js","components/intro/Intro.js","components/projects/ProjectIntro.js","components/projects/ProjectBox.js","components/projects/Projects.js","components/contact/Contact.js","components/current/Current.js","components/layout/Frame.js","App.js","serviceWorker.js","index.js"],"names":["Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","slide","bind","assertThisInitialized","state","animate","setState","react_default","a","createElement","className","CardBody","React","Component","technologies","name","TechLists","toggle","collapse","Row","Col","onClick","Collapse","isOpen","map","techItem","key","methodologies","MethLists","column","methItem","testing","TestLists","testItem","cssFrameWorks","cssItem","Intro","props","cats","image","newSection","id","intro_TechLists","intro_MethLists","intro_TestLists","FrameworksLists","ProjectBox","modal","toggleModal","description","link","Card","Button","outline","Modal","scrollable","size","ModalHeader","ModalBody","src","href","gaProject","mainImage","comProject","finishedSection","ProjectIntro","project","projects_ProjectBox","Contact","currentProject","Current","Frame","next","prev","counter","layout_Header","intro_Intro","Projects","current_Current","contact_Contact","nextState","buttonTextPrev","buttonTextNext","App","layout_Frame","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0ba1226.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport { CardBody }  from 'reactstrap';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.slide = this.slide.bind(this);\n    this.state = {\n      animate: ''\n    };\n  }\n\n  slide() {\n    this.setState({\n      animate: 'slide-out'\n    })\n  }\n\n  render() {\n    return (\n      <header>\n        <section className=\"\">\n          <div>\n            <CardBody>\n              <div>\n                <h1 className=\"title\">Grant Wilkinson's Portfolio</h1>\n              </div>\n            </CardBody>\n          </div>\n        </section>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","\nimport React from \"react\";\nimport { Collapse, Row, Col, CardBody }  from 'reactstrap';\n\nconst technologies = [\n  {name: 'HTML'},\n  {name: 'CSS'},\n  {name: 'JavaScript'},\n  {name: 'ReactJS'},\n  {name: 'SCSS'},\n  {name: 'Node.js'},\n  {name: 'AngularJS'},\n  {name: 'MongoDB'},\n  {name: 'Express'},\n  {name: 'jQuery'},\n  {name: 'JSON'},\n];\n\nclass TechLists extends React.Component {\n  constructor() {\n    super();\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      collapse: false\n    };\n  }\n\n  toggle() {\n    this.setState(\n      state => ({\n        collapse: !state.collapse\n      }));\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col>\n          <CardBody>\n            <article className=\"\">\n              <div className=\"\">\n                <h4 className=\"lists\" onClick={this.toggle}>Technologies</h4>\n              </div>\n              <Collapse isOpen={this.state.collapse}>\n                <CardBody>\n                  <div className=\"tech-list\">\n                    {technologies.map(\n                      techItem =>\n                        <p key={techItem.name}>{techItem.name}</p>\n                    )}\n                  </div>\n                </CardBody>\n              </Collapse>\n            </article>\n          </CardBody>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default TechLists;\n","\nimport React from \"react\";\nimport { Collapse, Row, Col, CardBody }  from 'reactstrap';\n\nconst methodologies = [\n  {name: 'Trello'},\n  {name: 'Insomnia'},\n  {name: 'GitHub'},\n  {name: 'Heroku'},\n]\n\nclass MethLists extends React.Component {\n  constructor() {\n    super();\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      collapse: false\n    };\n  }\n\n  toggle(column) {\n    this.setState(\n      state => ({\n        collapse: !state.collapse\n      }));\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col>\n          <CardBody>\n            <article className=\"\">\n              <div className=\"\">\n                <h4 className=\"lists\" onClick={this.toggle}>Methodologies</h4>\n              </div>\n              <Collapse isOpen={this.state.collapse}>\n                <CardBody>\n                  <div className=\"tech-list\">\n                    {methodologies.map(\n                      methItem =>\n                        <p key={methItem.name}>{methItem.name}</p>\n                    )}\n                  </div>\n                </CardBody>\n              </Collapse>\n            </article>\n          </CardBody>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default MethLists;\n","\nimport React from \"react\";\nimport { Collapse, Row, Col, CardBody }  from 'reactstrap';\n\nconst testing = [\n  {name: 'Mocha'},\n  {name: 'Chai'}\n]\n\nclass TestLists extends React.Component {\n  constructor() {\n    super();\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      collapse: false\n    };\n  }\n\n  toggle() {\n    this.setState(\n      state => ({\n        collapse: !state.collapse\n      }));\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col>\n          <CardBody>\n            <article className=\"\">\n              <div className=\"\">\n                <h4 className=\"lists\" onClick={this.toggle}>Testing</h4>\n              </div>\n              <Collapse isOpen={this.state.collapse}>\n                <CardBody>\n                  <div className=\"tech-list\">\n                    {testing.map(\n                      testItem =>\n                        <p key={testItem.name}>{testItem.name}</p>\n                    )}\n                  </div>\n                </CardBody>\n              </Collapse>\n            </article>\n          </CardBody>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default TestLists;\n","\nimport React from \"react\";\nimport { Collapse, Row, Col, CardBody }  from 'reactstrap';\n\nconst cssFrameWorks = [\n  {name: 'Bulma'},\n  {name: 'Bootstrap'}\n]\n\nclass TechLists extends React.Component {\n  constructor() {\n    super();\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      collapse: false\n    };\n  }\n\n  toggle() {\n    this.setState(\n      state => ({\n        collapse: !state.collapse\n      }));\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col>\n          <CardBody>\n            <article className=\"\">\n              <div className=\"\">\n                <h4 className=\"lists\" onClick={this.toggle}>CSS Frameworks</h4>\n              </div>\n              <Collapse isOpen={this.state.collapse}>\n                <CardBody>\n                  <div className=\"tech-list\">\n                    {cssFrameWorks.map(\n                      cssItem =>\n                        <p key={cssItem.name}>{cssItem.name}</p>\n                    )}\n                  </div>\n                </CardBody>\n              </Collapse>\n            </article>\n          </CardBody>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default TechLists;\n","\nimport React from \"react\";\nimport TechLists from './TechLists';\nimport MethLists from './MethLists';\nimport Testing from './TestLists';\nimport Frameworks from './FrameworksLists';\n\nimport { Row, Col }  from 'reactstrap';\n\nclass Intro extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.cats = this.props.cats;\n    this.state = {\n      collapse: false,\n      image: ''\n    };\n  }\n\n\n  toggle() {\n    this.setState(\n      state => ({\n        collapse: !state.collapse\n      }));\n  }\n\n  slide() {\n    this.setState({\n      animate: 'slide-out',\n      newSection: 'slide-in-section'\n    })\n  }\n\n\n  render() {\n    return (\n      <article className=\"intro\">\n        <div className=\"\">\n          <h2 className=\"\" id=\"about\">Introduction</h2>\n        </div>\n        <div>\n          <p>Thanks for taking the time to check out my portfolio.</p>\n          <p>I'm from London and have just finished my first commercial contract at TokenAnalyst,\n           I have also completed the Immersive Web Development course at GA.</p>\n          <p>I am currently focusing on ReactJS, node.js\n          and keeping my vanilla javascript up to date</p>\n          <p>Really enjoying coding and just wish I'd gotten into it sooner.</p>\n          <p>I'm looking for new opportunities as a Junior Developer.</p>\n          <Row>\n            <Col>\n              <TechLists />\n            </Col>\n            <Col>\n              <MethLists />\n            </Col>\n            <Col>\n              <Testing />\n            </Col>\n            <Col>\n              <Frameworks />\n            </Col>\n          </Row>\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default Intro;\n","\nimport React from \"react\";\n\nimport { CardBody}  from 'reactstrap';\n\nclass Intro extends React.Component {\n  constructor() {\n    super();\n    this.toggle = this.toggle.bind(this);\n    this.state = { collapse: false };\n  }\n\n  toggle() {\n    this.setState(state => ({ collapse: !state.collapse }));\n  }\n\n  render() {\n    return (\n      <CardBody>\n        <div>\n          <p>\n          These are the projects that I have made to date.\n          tokenanalyst.io is my most recent project.\n          I was given seven days to complete each of the GA projects,\n          I haven't done anything to them since so that you can see my progression.\n          Nodestats is the project that I am most proud of. It was the first time that I had worked\n          with huge amounts of data and google charts. I learned a so much while doing this project.\n          </p>\n          <p>I hope that you like them.</p>\n        </div>\n      </CardBody>\n    );\n  }\n}\n\nexport default Intro;\n","\nimport React from \"react\";\n\nimport {\n  Card,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Button }  from 'reactstrap';\n\nclass ProjectBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapse: false,\n      modal: false\n     };\n     this.toggle = this.toggle.bind(this);\n     this.toggleModal = this.toggleModal.bind(this);\n     this.name = this.props.name;\n     this.image = this.props.image;\n     this.description = this.props.description;\n     this.link = this.props.link;\n  }\n\n    toggle() {\n      this.setState(\n        state => ({\n          collapse: !state.collapse\n        }));\n    }\n\n    toggleModal() {\n      this.setState(\n        state => ({\n          modal: !state.modal\n        }));\n    }\n\n  render() {\n    return (\n    <Col>\n      <Card className=\"\">\n        <Button className=\"modal-button\" outline onClick={this.toggleModal}>{this.name}</Button>\n        <Modal scrollable size=\"l\" isOpen={this.state.modal} toggle={this.toggleModal}>\n        <ModalHeader toggle={this.toggleModal}>{this.name}</ModalHeader>\n          <ModalBody>\n            <div>\n              <div className=\"image-box\">\n                <img src={this.image}/>\n              </div>\n              <div>\n                <p>{this.description}</p>\n              </div>\n              <div>\n                <a href={this.link}>Visit {this.name}</a>\n              </div>\n            </div>\n          </ModalBody>\n        </Modal>\n      </Card>\n    </Col>\n    );\n  }\n}\n\nexport default ProjectBox;\n","\nimport React from \"react\";\nimport ProjectIntro from './ProjectIntro';\nimport ProjectBox from './ProjectBox';\n\nimport { Row }  from 'reactstrap';\n\nconst gaProject = [\n  {\n    id: 1,\n    name: 'MakeBook',\n    mainImage: '/makebook.png',\n    description: <p>This project is made using Node.js, MongoDB, Express,\n    ReactJS, JavaScript and SCSS.\n    For this project I decided to make an app\n    that allows the user to create their own adventure\n    game-book and read all the books that have been created by\n    other users.</p>,\n    link: 'https://makebook.herokuapp.com/'\n  },\n  {\n    id: 2,\n    name: 'Eventz',\n    mainImage: '/eventz.png',\n    description: <p>\n    This is the first project that I've made as part of a team.\n    We used Node.js, MongoDB, Express, AngularJS, JavaScript, SCSS and HTML.\n    We decided to make an event planner app where the user can add,\n    join and comment on events.  We used OpenStreetMap and Nominatem\n    so that when the user adds an event a pin will be put on the\n    map at the event’s location on the show page.\n    This project was made mobile-first.\n    In the future this project would be made much more useful if\n    you could add friends and only the friends could see your events\n    and join them.\n    </p>,\n    link: 'https://wdi-events-project.herokuapp.com/#!/'\n  },\n  {\n    id: 3,\n    name: 'MangaBook',\n    mainImage: '/mangabook.png',\n    description: <p>\n      This is the first app that I made with a back-end. It is made with\n      Node.js, EJS, Express, MongoDB, JavaScript and CSS.\n      I decided to make a Manga review site as I am a huge Manga nerd.\n      You can register, login, logout, rate, add your own reviews and\n      leave comments.\n      This project was made mobile-first.\n      In the future I think this app would benefit greatly from\n      a table that placed each of the added books from top to bottom\n      in order of ratings.\n    </p>,\n    link: 'http://manga-book.herokuapp.com/'\n  },\n  {\n    id: 4,\n    name: 'Codebusters',\n    mainImage: '/codebusters.png',\n    description: <p>\n    This is the first project that I made at General Assembly.\n    It uses HTML, CSS and JavaScript.\n    I chose to make a quiz game that asks questions\n    on HTML, CSS and JavaScript that increase in difficulty\n    for each correct answer you give.\n    It is not even slightly responsive at the moment and there are some\n    bugs, such as the game doesn't end properly. But it\n    wouldn't be too hard to fix.\n    </p>,\n    link: 'https://gmwilkinson.github.io/codebusters/'\n  }\n]\nconst comProject = [\n  {\n    id: 5,\n    name: 'TokenAnalyst.io',\n    mainImage: '/tokenanalyst:pricing.png',\n    description: <p>\n    This was an amazing project, it is TokenAnalyst's main website.\n    I'd never worked on something so large with so many features\n    before. It is made with ReactJS and Redux.\n    I worked on the Pricing page,\n    About page, FAQ page,\n    and the modals. For anyone interested in crypto, this is a great site to visit.\n    </p>,\n    link: 'https://www.tokenanalyst.io/'\n  },\n  {\n    id: 6,\n    name: 'Nodestats',\n    mainImage: '/nodestats.png',\n    description: <p>Nodestats is a site that tracks activity on different Ethereum nodes\n    . I made this site as sole developer for TokenAnalyst and Bitmex Research. This was my first commercial\n    project. It is a ReactJS app with a basic Express server. Displaying such an enormous\n    amount of data was daunting at first. The site gets data from 80 different api's and some of the charts\n    have over 5000 data points. Formatting this data and displaying it as fast as possible\n    was a very exciting challenge.</p>,\n    link: 'https://www.nodestats.org/'\n  }\n]\n\nclass Intro extends React.Component {\n  constructor() {\n    super();\n    this.slide = this.slide.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      collapse: false,\n      finishedSection: '',\n      newSection: 'hidden',\n      animate: ''\n     };\n  }\n  componentDidMount() {\n    this.setState(\n      state => ({\n        animate: ''\n      }));\n  }\n\n  toggle() {\n    this.setState(\n      state => ({\n        collapse: !state.collapse,\n      }));\n  }\n\n  slide() {\n    this.setState({\n      animate: 'slide-out',\n      newSection: 'slide-in-section'\n    })\n  }\n\n  render() {\n    return (\n      <article className=\"project\">\n        <div>\n          <h2 className=\"\" id=\"projects\">Projects</h2>\n        </div>\n        <div>\n          <ProjectIntro />\n          <h2 onClick={this.toggle}>Commercial Projects</h2>\n          <Row>\n          {comProject && comProject.map(\n            project =>\n            <ProjectBox\n              key={project.id}\n              name={project.name}\n              description={project.description}\n              link={project.link}\n              image={project.mainImage}/>\n            )}\n          </Row>\n          <h2 onClick={this.toggle}>GA Projects</h2>\n          <Row>\n            {gaProject && gaProject.map(\n              project =>\n              <ProjectBox\n                key={project.id}\n                name={project.name}\n                description={project.description}\n                link={project.link}\n                image={project.mainImage}/>\n              )}\n          </Row>\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default Intro;\n","\nimport React from \"react\"\n\nclass Contact extends React.Component {\n  constructor() {\n    super();\n    this.slide = this.slide.bind(this);\n    this.state = {\n      collapse: false,\n      finishedSection: '',\n      newSection: 'hidden',\n      animate: ''\n     };\n  }\n\n  slide() {\n    this.setState({\n      animate: 'slide-out',\n      newSection: 'slide-in-section'\n    })\n  }\n\n\n  render() {\n    return (\n          <article className=\"contact\">\n            <div>\n              <h2>Contact</h2>\n            </div>\n            <div>\n              <section className=\"\">\n                <div className=\"contact-details\">\n                  <p>If you fancy a chat or a coffee, feel free to contact me at</p>\n                  <p><strong className=\"\">wilkinsonmgrant@gmail.com</strong></p>\n                  <p>or</p>\n                  <div>\n                    <a href=\"https://github.com/GMWilkinson/\">GitHub</a>\n                    <a href=\"https://www.linkedin.com/in/gmwilkinson\">LinkedIn</a>\n                  </div>\n                </div>\n              </section>\n            </div>\n          </article>\n    );\n  }\n}\n\nexport default Contact;\n","\nimport React from \"react\";\nimport ProjectBox from '../projects/ProjectBox';\n\nimport { Row }  from 'reactstrap';\n\nconst currentProject = [\n  {\n    id: 1,\n    name: 'Not Named Yet',\n    description: <p>\n    I am making a Jack the Ripper based mystery game. The user is a\n    Private Eye that is on the hunt for a copycat killer. The user will have to solve clues\n    based on the Victorian hunt for Jack the Ripper. I will use images of the modern day\n    places where the crimes took place.\n    </p>\n  },\n  {\n    id: 2,\n    name: 'Not Named Yet',\n    description: <p>\n    This is an app where the user can create a blog. It is still very early in development,\n    I have found it more difficult than I had first imagined but that is only making it\n    more exciting as a challenge. The main problem I have found is for the user to add images\n    anywhere that they like on a post. I am playing with the idea that the user will\n    type (image) and I will use string.split('(image)') to isolate where the user\n    wants the image placed. I am currently using this system to seperate paragraphs.\n    </p>\n  }\n]\n\n\nclass Current extends React.Component {\n  constructor() {\n    super();\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      collapse: false,\n      finishedSection: ''\n     };\n  }\n\n  toggle() {\n    this.setState(\n      state => ({\n        collapse: !state.collapse,\n      }));\n  }\n\n  render() {\n    return (\n      <article className=\"current\">\n        <div>\n          <h2 className=\"\" id=\"current\">My Current Projects</h2>\n        </div>\n        <div>\n          <Row>\n          {currentProject && currentProject.map(\n            project =>\n            <ProjectBox\n              key={project.id}\n              name={project.name}\n              description={project.description}\n              />\n            )}\n          </Row>\n        </div>\n      </article>\n    );\n  }\n}\n\nexport default Current;\n","\nimport React from \"react\";\nimport Header from './Header';\nimport Intro from '../intro/Intro';\nimport Projects from '../projects/Projects';\nimport Contact from '../contact/Contact';\nimport Current from '../current/Current';\n\nimport { CardBody } from 'reactstrap';\n\nclass Frame extends React.Component {\n  constructor() {\n    super();\n    this.slide = this.slide.bind(this);\n    this.next = this.next.bind(this);\n    this.prev = this.prev.bind(this);\n    this.state = {\n      finishedSection: '',\n      newSection: 'hidden',\n      animate: '',\n      counter: 0\n    };\n  }\n\n  next() {\n    this.setState({\n      counter: this.state.counter +1\n    })\n  }\n\n  prev() {\n    this.setState({\n      counter: this.state.counter -1\n    })\n  }\n\n  nextState() {\n    if (this.state.counter === 0) {\n      return <Header />\n    }  if (this.state.counter === 1) {\n        return <Intro />\n    }  if (this.state.counter === 2) {\n        return <Projects />\n    }  if (this.state.counter === 3) {\n        return <Current />\n    }  if (this.state.counter === 4) {\n        return <Contact />\n    }\n  }\n\n  buttonTextNext() {\n    if (this.state.counter === 0) {\n      return 'Intro'\n    }  if (this.state.counter === 1) {\n        return 'Projects'\n    }  if (this.state.counter === 2) {\n        return 'Current'\n    }  if (this.state.counter === 3) {\n        return 'Contact'\n    }\n  }\n\n  buttonTextPrev() {\n      if (this.state.counter === 1) {\n        return 'Title'\n    }  if (this.state.counter === 2) {\n        return 'Intro'\n    }  if (this.state.counter === 3) {\n        return 'Projects'\n    }  if (this.state.counter === 4) {\n      return 'Current'\n    }\n  }\n\n  slide() {\n    this.setState({\n      animate: 'slide-out',\n      newSection: 'slide-out-section'\n    })\n  }\n\n  render() {\n    return (\n      <section >\n        <div className=\"header-box\">\n          <div className=\"header\">\n            <div>\n              <CardBody>\n                <div>\n                  <section>{this.nextState()}</section>\n                </div>\n              </CardBody>\n            </div>\n          </div>\n        </div>\n        <div className=\"prev-next-box\">\n        {this.state.counter > 0 ?\n        <div className=\"prev\" onClick={this.prev}>{this.buttonTextPrev()}</div>\n        :\n        <p></p>\n        }\n        </div>\n        <div>\n        {this.state.counter < 4 ?\n        <div className=\"next\" onClick={this.next}>{this.buttonTextNext()}</div>\n        :\n        <p></p>\n      }\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Frame;\n","import React, { Component } from 'react';\nimport Frame from './components/layout/Frame'\nimport './scss/app.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <section className=\"App\">\n        <Frame />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}